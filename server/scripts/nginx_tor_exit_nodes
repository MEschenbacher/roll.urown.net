#!/bin/bash
#
# Create Nginx map file of Tor Exit Nodes
#

# Bail-out on errors
#set -e

# Settings
MY_IP=$( curl -s --fail --ipv4 http://v4.ipv6-test.com/api/myip.php )
MY_PORT=443
FETCH_URL="https://check.torproject.org/cgi-bin/TorBulkExitList.py?ip=${MY_IP}&port=${MY_PORT}"
MAP_FILE='/etc/nginx/tor-exit-nodes.map'

# Log to syslog
log()
{
    logger -t ngx_tor_exits --priority user.${1} ${2}
}

valid_ip()
# Test an IP address for validity:
# Usage:
#      valid_ip IP_ADDRESS
#      if [[ $? -eq 0 ]]; then echo good; else echo bad; fi
#   OR
#      if valid_ip IP_ADDRESS; then echo good; else echo bad; fi
#
{
    local  ip=$1
    local  stat=1

    if [[ ${ip} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=${IFS}
        IFS='.'
        ip=(${ip})
        IFS=${OIFS}
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return ${stat}
}

TMP_DL_FILE=$( mktemp )
TMP_MAP_FILE=$( mktemp )

# Fetch the list
log 'notice' "Fetching Tor Exit Nodes ..."
the_list=$( curl -s --fail --remote-time --remote-time ${MAP_FILE} --url ${FETCH_URL} )
log 'notice' "Done fetching Nodes"

# Set the field separator to new line
IFS=$'\n'

while read -r line; do
    valid_ip ${line}
    if [[ $? -eq 0 ]]; then
        line+=' true;'
    else
        line="##${line}"
    fi
    echo ${line} >> ${TMP_MAP_FILE}
done <<< "${the_list}"

# Remove old backups
find /etc/nginx/ -name tor-exit-nodes.map.~* -delete

# Install
log 'notice' "Installing fresh node list ${MAP_FILE} ..."
/usr/bin/install --backup=numbered --mode=0664 --preserve-timestamps \
    ${TMP_MAP_FILE} ${MAP_FILE}

