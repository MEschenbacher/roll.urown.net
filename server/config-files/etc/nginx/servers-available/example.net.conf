#
# example.net Basic Static Website Example
#

# Unsecured HTTP Site and Aliases - Redirect to proper HTTPS Site
server {

    server_name example.net www.example.net;

    # IPv6 public global address
    listen      [2001:db8::11]:80 deferred;

    # IPv4 private local address
    listen      192.0.2.11:80 deferred;

    # IPv4 private address (Port-forwarded from NAT firewall/router)
    listen      192.0.2.10:80;

    # Redirect Tor Clients to our Tor Hidden Service
    if ($isTorExitNode = "true") {
        return  301 http://1234567890abcdef.onion$request_uri;
    }

    # Redirect to HTTPS on proper hostname
    return      301 https://$server_name$request_uri;
}

# Secured HTTPS Alias Servers - Redirect to proper HTTPS Server
server {

    server_name www.example.net;

    # IPv6 public global address
    listen      [2001:db8::11]:443 ssl http2;

    # IPv4 private local address
    listen      192.0.2.11:443 ssl http2;

    # IPv4 private address (Port-forwarded from NAT firewall/router)
    listen      192.0.2.10:443 ssl http2;

    # TLS certificate (chained) and private key
    ssl_certificate         /etc/dehydrated/certs/example.net/fullchain.pem;
    ssl_certificate_key     /etc/dehydrated/certs/example.net/privkey.pem;

    # Enable stapling of online certificate status protocol (OCSP) response
    include                 ocsp-stapling.conf;

    # TLS certificate of signing CA (to validate OCSP response when stapling)
    ssl_trusted_certificate /etc/dehydrated/certs/example.net/chain.pem;

    # OCSP stapling response file (pre-generated)
    ssl_stapling_file       /etc/dehydrated/certs/example.net/ocsp_response.der;

    # TLS session cache (type:name:size)
    ssl_session_cache       shared:www.example.net:10m;

    # TLS session ticket keys (rotated every 8 hours, for 24 hours max.)
    ssl_session_ticket_key  tls_session_keys/www.example.net.1.key;
    ssl_session_ticket_key  tls_session_keys/www.example.net.2.key;
    ssl_session_ticket_key  tls_session_keys/www.example.net.3.key;

    # Strict Transport Security (HSTS)
    include     hsts.conf;

    # Redirect Tor Clients to our Tor Hidden Service
    if ($isTorExitNode = "true") {
        return  301 http://1234567890abcdef.onion$request_uri;
    }

    # Redirect to HTTPS on proper hostname
    return      301 https://example.net$request_uri;

}

# Secured HTTPS Server
server {

    server_name example.net;

    # IPv6 public global address
    listen      [2001:db8::11]:443 ssl http2 deferred;

    # IPv4 private local address
    listen      192.0.2.11:443 ssl http2 deferred;

    # IPv4 private address (Port-forwarded from NAT firewall/router)
    listen      192.0.2.10:443 ssl http2;

    # TLS certificate (chained) and private key
    ssl_certificate         /etc/dehydrated/certs/example.net/fullchain.pem;
    ssl_certificate_key     /etc/dehydrated/certs/example.net/privkey.pem;

    # Enable stapling of online certificate status protocol (OCSP) response
    include                 ocsp-stapling.conf;

    # TLS certificate of signing CA (to validate OCSP response when stapling)
    ssl_trusted_certificate /etc/dehydrated/certs/example.net/chain.pem;

    # OCSP stapling response file (pre-generated)
    ssl_stapling_file       /etc/dehydrated/certs/example.net/ocsp_response.der;

    # TLS session cache (type:name:size)
    ssl_session_cache       shared:example.net:10m;

    # TLS session ticket keys (rotated every 8 hours, for 24 hours max.)
    ssl_session_ticket_key  tls_session_keys/example.net.1.key;
    ssl_session_ticket_key  tls_session_keys/example.net.2.key;
    ssl_session_ticket_key  tls_session_keys/example.net.3.key;

    # Strict Transport Security (HSTS)
    include     hsts.conf;

    # Content Security Policy (CSP) (line-breaks for readability, don't include them)
    add_header  Content-Security-Policy
        "default-src 'none';
         script-src 'none';
         style-src 'none';
         img-src 'none';
         font-src 'none';
         connect-src 'none';
         media-src 'none';
         object-src 'none';
         child-src 'none';
         worker-src 'none';
         frame-ancestors 'none';
         form-action 'none';
         upgrade-insecure-requests;
         block-all-mixed-content;
         reflected-xss block;
         base-uri https://example.net/;
         manifest-src 'none';
         referrer no-referrer; "
        always;

    # Redirect Tor Clients to our Tor Hidden Service
    if ($isTorExitNode = "true") {
        return  301 http://1234567890abcdef.onion$request_uri;
    }

    # Common Server Settings
    include     server-conf.d/*.conf;

    # Servers Public Documents Root
    root        /var/www/example.net/public_html;
}

# Tor Hidden Service
server {

    server_name 1234567890abcdef.onion;

    # IPv4 local address (forwarded from Tor hidden service)
    listen      127.0.0.11:80 deferred;

    # Common Server Settings
    include     server-conf.d/*.conf;

    # Content Security Policy (CSP) (line-breaks for readability, don't include them)
    add_header  Content-Security-Policy
        "default-src 'none';
         script-src 'none';
         style-src 'none';
         img-src 'none';
         font-src 'none';
         connect-src 'none';
         media-src 'none';
         object-src 'none';
         child-src 'none';
         worker-src 'none';
         frame-ancestors 'none';
         form-action 'none';
         reflected-xss block;
         base-uri http://1234567890abcdef.onion/;
         manifest-src 'none';
         referrer no-referrer; "
        always;

    # Servers Public Documents Root
    root        /var/www/example.net/public_html;
}
