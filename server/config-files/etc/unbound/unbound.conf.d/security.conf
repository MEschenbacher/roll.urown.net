#=============================================
# Unbound Server Settings for OpenWrt
#=============================================

server:
    #----------------------------------------
    # Security and Privacy Settings
    #----------------------------------------

    # Timeout in milliseconds used when the server is very busy. Set to a value
    # that usually results in one roundtrip to the authority servers. If too
    # many queries arrive, then 50% of the queries are allowed to run to
    # completion, and the other 50% are replaced with the new incoming query if
    # they have already spent more than their allowed time. This protects
    # against denial of service by slow queries or high query rates. Default 200
    # milliseconds. The effect is that the qps for long-lasting queries is
    # about  (num- queries- per-thread / 2) / (average time for such long
    # queries) qps. The qps for short queries can be about (num-queries- per-
    # thread / 2) / (jostle-timeout in whole seconds) qps per thread, about
    # (1024/2)*5 = 2560 qps by default.
    # Deafault: 200
    #jostle-timeout: 200

    # If enabled id.server and hostname.bind queries are refused.
    hide-identity: yes

    # Set the identity to report. If set to "", the default, then the hostname
    # of the server is returned.
    # Default: "" (server hostname)
    identity: ""

    # If enabled version.server and version.bind queries are refused.
    hide-version: yes

    # Set the version to report. If set to "", the default,  then  the package
    # version is returned.
    version: ""

    # If enabled trustanchor.unbound queries are refused.
    hide-trustanchor: yes

    # Set the target fetch policy used by unbound to determine if it should
    # fetch nameserver target addresses opportunistically.The policy is
    # described per dependency depth.
    # The number of values determines the maximum dependency depth that unbound
    # will pursue in answering a query. A value of -1 means to fetch all targets
    # opportunistically for that dependency depth. A value of 0 means to fetch
    # on demand only. A positive value fetches that many targets
    # opportunistically.
    # Enclose the list between quotes ("") and put spaces between numbers. The
    # default is "3 2 1 0 0". Setting all zeroes, "0 0 0 0 0" gives behaviour
    # closer to that of BIND 9, while setting "-1 -1 -1 -1 -1" gives behaviour
    # rumoured to be closer to that of BIND 8.
    # Default: "3 2 1 0 0", OpenWrt default: "2 1 0 0 0 0"
    target-fetch-policy: "3 2 1 0 0"

    # Very small EDNS buffer sizes from queries are ignored. Default
    # is off, since it is legal protocol wise to send these, and
    # unbound tries to give very small answers to these queries, where
    # possible.
    # Default: no. OpenWRT Default: yes
    harden-short-bufsize: no

    # Very large queries are ignored. Default is off, since it is
    # legal protocol wise to send these, and could be necessary for
    # operation if TSIG or EDNS payload is very large.
    # Default: no. OpenWrt default: yes
    harden-large-queries: no

    # Will trust glue only if it is within the servers authority.
    # Default: yes.
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the
    # zone becomes bogus. If turned  off, and no DNSSEC data is received (or the
    # DNSKEY data fails to validate), then the zone is made insecure, this
    # behaves like there is no trust anchor. You could turn this off if you are
    # sometimes behind an intrusive firewall (of some sort) that removes DNSSEC
    # data from packets, or a zone changes from signed to unsigned to badly
    # signed often. If turned off you run the risk of a downgrade attack that
    # disables security for a zone.
    # Default: yes
    harden-dnssec-stripped: yes

    # From RFC 8020 (with title "NXDOMAIN: There Really Is Nothing Underneath"),
    # returns nxdomain to queries for a name below another  name that is already
    # known to be nxdomain. DNSSEC mandates  noerror for empty nonterminals,
    # hence this is possible. Very old software might return nxdomain for empty
    # nonterminals (that usually happen for reverse IP address lookups), and
    # thus may be incompatible with this. To try to avoid this only DNSSEC-
    # secure nxdomains are used, because the old software does not have DNSSEC.
    # Default is off. The nxdomain must be secure, this means nsec3 with optout
    # is insufficient.
    # Default: no
    harden-below-nxdomain:yes

    # Harden the referral path by performing additional queries for
    # infrastructure data. Validates the replies if trust anchors are configured
    # and the zones are signed. This enforces DNSSEC validation on nameserver NS
    # sets and the nameserver addresses that are encountered on the referral
    # path to the answer. Default off, because it burdens the authority servers,
    # and it is not RFC standard, and could lead to performance problems because
    # of the extra query load that is generated. Experimental option. If you
    # enable it consider adding more numbers after the target-fetch-policy  to
    # increase the max depth that is checked to.
    # Default: no
    harden-referral-path: no

    # Harden against algorithm downgrade when multiple algorithms are advertised
    # in the DS record. If no, allows the weakest algorithm to validate the
    # zone. Default is no. Zone signers must produce zones that allow this
    # feature to work, but sometimes they do not, and turning this option off
    # avoids that validation failure.
    # Default: no
    harden-algo-downgrade: no

    # Use 0x20-encoded random bits in the query to foil spoof attempts. This
    # perturbs the lowercase and uppercase of query names sent to authority
    # servers and checks if the reply still has the correct casing. Disabled by
    # default. This feature is an experimental implementation of draft dns-0x20.
    # Default: no
    use-caps-for-id: yes

    # Whitelist the domain so that it does not receive caps-for-id perturbed
    # queries. For domains that do not support 0x20 and also fail with fallback
    # because they keep sending different answers, like some load balancers. Can
    # be given multiple times, for different domains.
    #caps-whitelist:

    # Send minimum amount of information to upstream servers to enhance privacy.
    # Only sent minimum required labels of the QNAME and set QTYPE to NS when
    # possible. Best effort approach; full QNAME and original QTYPE will be sent
    # when upstream replies with a RCODE other than NOERROR, except when
    # receiving NXDOMAIN from a DNSSEC signed zone.
    # Default: no
    qname-minimisation: yes

    # QNAME minimisation in strict mode. Do not fall-back to sending
    # full QNAME to potentially broken nameservers. A lot of domains
    # will not be resolvable when this option in enabled. Only use if
    # you know what you are doing. This option only has effect when
    # qname-minimisation is enabled.
    # Default: no
    qname-minimisation-strict: no

    # Give IPv4 of IPv6 addresses or classless subnets. These are addresses on
    # your private network, and are not allowed to be returned  for  public
    # internet names. Any occurrence of such addresses are removed from DNS
    # answers. Additionally, the DNSSEC validator may mark the answers bogus.
    # This protects against so-called DNS Rebinding, where a user browser is
    # turned into a network proxy, allowing remote access through the browser to
    # other parts of your private network. Some names can be allowed to contain
    # your private addresses, by default all the local-data that you configured
    # is allowed to, and you can specify additional names using private-domain.
    # No private addresses are enabled by default. We consider to enable this
    # for the RFC1918 private IP address space by default in later releases.
    # That would enable private addresses for 10.0.0.0/8, 172.16.0.0/12
    # 192.168.0.0/16, 169.254.0.0/16 fd00::/8 and fe80::/10, since the RFC
    # standards say these addresses should not be visible on the public
    # internet. Turning on 127.0.0.0/8 would hinder many spam- blocklists as
    # they use that.
    # Private IPv4 addresses (RFC 1918)
    private-address: 10.0.0.0/8
    private-address: 172.16.0.0/12
    private-address: 192.168.0.0/16
    # Private IPv6 addresses (RFC 4193)
    private-address: fc00::/7;
    # Link-local IPv4 addresses (RFC 6890 and RFC 3927)
    private-address: 169.254.0.0/16
    # Link-local IPv6 addresses (RFC 4862 and RFC 4291)
    private-address: fe80::/10
    private-address: fd00::/8
    # Stop IPv4-mapped IPv6 addresses from bypassing the filter.
    private-address: ::ffff:0:0/96

    # If set, a total number of unwanted replies is kept track of in every
    # thread. When it reaches the threshold, a defensive action is taken and a
    # warning is printed to the log. The defensive action is to clear the rrset
    # and message caches, hopefully flushing away any poison. A value of 10
    # million is suggested.
    # Default: 0 (turned off).
    unwanted-reply-threshold: 10000000

    # Do not query the given IP address. Can be IP4 or IP6. Append
    # /num to indicate a classless delegation netblock, for example
    # like 10.2.3.4/24 or 2001::11/64.
    #do-not-query-address:

    # If yes, localhost is added to the do-not-query-address entries, both IP6
    # ::1 and IP4 127.0.0.1/8. If no, then localhost can be used to send queries
    # to.
    # Default: yes
    do-not-query-localhost: no # Allow query to local dnsmasq on OpenWRT

# -*- mode: ini; tab-width: 4; indent-tabs-mode: nil -*-
