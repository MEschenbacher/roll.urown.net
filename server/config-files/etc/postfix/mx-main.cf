# **********************************************************************
# Mail Server Setttings for charlotte.example.net
# Postfix version 3.4.13
#
# See /usr/share/postfix/main.cf.dist for a commented version
#
# Reload server after chnages:
#     'sudo systemctl reload postfix.service'
# **********************************************************************


# ------------------------------------------------------------
# General Mail Server Setttings
# ------------------------------------------------------------

# Disable backwards-compatibility safety net
compatibility_level = 2

# What is my domainname?
mydomain = example.net

# What is my hostname (FQDN)?
myhostname = maeve.${mydomain}

# Do I have to append a dot and my domain-name (.$mydomain) to addresses?
append_dot_mydomain = no

# What characters in a recipient address separate users from extensions?
recipient_delimiter = +-

# Should I refuse mails with non-standard FROM or RCPT address formats?
strict_rfc821_envelopes = yes

# What domains do I receive mail for?
mydestination =
local_recipient_maps =
local_transport = error:local mail delivery is disabled

# Which clients do I trust and will relay mail to other domains?
mynetworks = ${config_directory}/mynetworks

# To which 3rd-party domains do I accept and forward (relay) mails?
#relay_domains =

# What trouble do I need to report to a human (postmaster)?
notify_classes = resource, software, 2bounce

# After how long should I notify if mail-delivery is delayed?
delay_warning_time = 6h

# Do I need to notify local users of new mail?
biff = no


# ------------------------------------------------------------
# Local Aliases Map
# ------------------------------------------------------------

# Which recipient addresses I have to rewrite before sending out mail?
recipient_canonical_maps = hash:${config_directory}/recipient_canonical


# ------------------------------------------------------------
# Virtual Relay Maps
# ------------------------------------------------------------

# How can I lookup virtual mail-domains to relay?
relay_domains = mysql:${config_directory}/sql/relay_domains.cf

# How do I lookup individual mailbox addresses of virtual mail-domains to relay?
relay_recipient_maps = mysql:${config_directory}/sql/relay_mailboxes.cf
                       mysql:${config_directory}/sql/relay_aliases.cf

# How do I relay mail for virtual domains?
transport_maps = mysql:${config_directory}/sql/relay_transports.cf


# ------------------------------------------------------------
# Mail Queue Settings
# ------------------------------------------------------------

# Fow how long I should retry to deliver mails after temporary failures (default 5d)
#maximal_queue_lifetime = 5d

# Fow how long I should retry to deliver bounce mails after temporary failures (default 5d)
#bounce_queue_lifetime = 5d

# The maximal time between attempts to deliver a deferred message (default 4000s/~1h).
#maximal_backoff_time = 4000s

# The minimal time between attempts to deliver a deferred message (default 5m)
#minimal_backoff_time = 5m

# The time interval to run queue management tasks (default 5m)
#queue_run_delay = 5m


# ------------------------------------------------------------
# TCP/IP Protocols Settings
#
# Changes made here need a full server restart:
#     'sudo systemctl restart postfix.service'
# ------------------------------------------------------------

# Which IPv4 addres do I use for outbound connections?
smtp_bind_address = 198.51.100.7

# Which IPv6 addres do I use for outbound connections?
smtp_bind_address6 = 2001:db8:48d1::1

# On which interfaces / IP addresses do I listen for inbound connections?
inet_interfaces = ${smtp_bind_address}, ${smtp_bind_address6}

# Digital Ocean blocks SMTP traffic over IPv6 at their network level.
#smtp_address_preference = ipv4


# ------------------------------------------------------------
# General TLS Settings
# ------------------------------------------------------------

# What ciphers suites do I use for opportunistic ecnryption?
# Note: While using non-mandatory opportunistic encryption, its preferable to
# use bad encryption, then no encrpytion at all.
# Generated 2020-12-13, Mozilla Guideline v5.6,
# Postfix 3.4.13, OpenSSL 1.1.1f, old configuration
# https://ssl-config.mozilla.org/
tls_low_cipherlist = ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA

# What ciphers suites do I use for mandatory ecnryption?
# Generated 2020-12-13, Mozilla Guideline v5.6,
# Postfix 3.4.13, OpenSSL 1.1.1f, intermediate configuration
tls_medium_cipherlist = ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

#tls_high_cipherlist = aNULL:-aNULL:HIGH:@STRENGTH

# Let the server select the used cipher, to possibly avoid the bad ones, which
# we support but would like to avoid.
tls_preempt_cipherlist = yes

# What OpenSSL options do I enable?
tls_ssl_options = NO_COMPRESSION
                  NO_RENEGOTIATION
                  NO_SESSION_RESUMPTION_ON_RENEGOTIATION

# TLS certificate and key for outgoing SMTP connections?
smtp_tls_cert_file = /etc/letsencrypt/live/${myhostname}/fullchain.pem
smtp_tls_key_file  = /etc/letsencrypt/live/${myhostname}/privkey.pem

# TLS certificate and key for incoming connections?
smtpd_tls_cert_file = $smtp_tls_cert_file
smtpd_tls_key_file  = $smtp_tls_key_file

# Where do I find trusted CA certificates to verify SMTP clients or servers?
smtp_tls_CApath = /etc/ssl/certs
smtpd_tls_CApath = ${smtp_tls_CApath}

# Which TLS protocols do I use for opportunistic TLS policies, if a security
# level is set to 'may' or 'dane'?
# Note: While using non-mandatory opportunistic encryption, its preferable to
# use bad encryption, then no encrpytion at all.
#smtp_tls_protocols = !SSLv2, !SSLv3
#smtpd_tls_protocols = ${smtp_tls_protocols}

# Which TLS protocols am I allowed to use if a security level is set to anything
# other then 'none' or 'may'?
smtp_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtpd_tls_mandatory_protocols = ${smtp_tls_mandatory_protocols}

# Which set of cipher suites shoud I use for opportunistic TLS policies, if
# security level is set to 'may' or 'dane'?
# Note: While using non-mandatory opportunistic encryption, its preferable to
# use bad encryption, then no encrpytion at all.
#smtp_tls_ciphers = medium
#smtpd_tls_ciphers = ${smtp_tls_ciphers}

# Which set of ciphers suites should I use, if a security level is set to
# anything other then 'none' or 'may'?
smtp_tls_mandatory_ciphers = high
smtpd_tls_mandatory_ciphers = ${smtp_tls_mandatory_ciphers}

# Where do I get Diffie-Hellmann key-exchange (DHE) parameters from?
# Required bye DHE ciphers for perfect forward secrecy
smtpd_tls_dh1024_param_file = /etc/ssl/dhparams/dh_4096.pem
smtpd_tls_dh512_param_file  = /etc/ssl/dhparams/dh_2048.pem

# Where do I cache outgoing SMTP TLS sessions?
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

# Where do I cache incoming SMTP TLS sessions?
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache

# Should I ask connecting clients for their own certificate?
smtpd_tls_ask_ccert = yes

# Should I make a note if I encounter servers who offer encryption?
smtp_tls_note_starttls_offer = yes

# Should I include protocol and cipher used in the "Received:" message headers?
smtpd_tls_received_header = yes

# How much of the TLS transactions should I log?
smtp_tls_loglevel = 1
smtpd_tls_loglevel = ${smtp_tls_loglevel}


# ------------------------------------------------------------
# SMTP Client Settings
# ------------------------------------------------------------

# What DNS lookup methods do I use for outgoing SMTP sessions?
# Possible values:
# 'disabled', 'enabled' or 'dnssec'
smtp_dns_support_level = dnssec

# What TLS encryption and verifications are required for outgoing SMTP connections?
# Possible values:
# 'none', 'may', 'encrypt', 'dane', 'dane-only', 'fingerprint', 'verify' or 'secure'.
smtp_tls_security_level = dane

# How to handle DANE TLSA certified MX hosts that where not secured by DNSSEC?
#smtp_tls_dane_insecure_mx_policy = dane

# Where do I lookup domain specific TLS policies when sending mail?
smtp_tls_policy_maps =
    mysql:${meta_directory}/sql/tls-policy.cf
    socketmap:unix:/mta-sts/mta-sts.sock

# ------------------------------------------------------------
# SMTP Server Settings
# ------------------------------------------------------------

# Is TLS encryption required for incoming connections?
# Possible values: 'none', 'may' or ''encrypt
smtpd_tls_security_level = may


# ------------------------------------------------------------
# SMTP Relay Restrictions
# ------------------------------------------------------------

# What message digest algorithm do I use to verify relay client certificates?
smtpd_tls_fingerprint_digest = sha256

# Where do I lookup public-key fingerprints of allowed relay client certificates?
relay_clientcerts = hash:${meta_directory}/relay_clientcerts

# What restrictions apply to relayed mails?
smtpd_relay_restrictions =
    permit_mynetworks
    permit_tls_clientcerts
    reject_unauth_destination


# ------------------------------------------------------------
# SMTP Server Restrictions
# ------------------------------------------------------------

# What is the maximum message size (in bytes)?
# 25 Megabytes = 26,214,400 Bytes
message_size_limit = 26214400

# What restrictins apply to connecting clients?
smtp_client_restrictions =
    permit_mynetworks
    check_client_access hash:${meta_directory}/without_ptr
    reject_unknown_client_hostname

# Are connecting clients required to greet me properly before anything else?
smtpd_helo_required = yes

# What restrictins apply to SMTP HELO greetings
smtpd_helo_restrictions =
    permit_mynetworks
    reject_invalid_helo_hostname
    reject_non_fqdn_helo_hostname
    reject_unknown_helo_hostname

# What restrictins apply to any mail sender address?
smtp_sender_restrictions =
    permit_mynetworks
    reject_non_fqdn_sender
    reject_unknown_sender_domain
    reject_unlisted_sender

# What restrictins apply to any mail recipient address?
smtpd_recipient_restrictions =
    reject_non_fqdn_recipient
    reject_unknown_recipient_domain

# What restrictins apply to mail content?
smtpd_data_restrictions = reject_unauth_pipelining


# ------------------------------------------------------------
# Mail Filters (Milters)
# ------------------------------------------------------------

# Milters which handle mail that arrives via smtpd(8)
# Note: UNIX Socket files are relative to '/var/spool/postfix'
smtpd_milters = unix:/rspamd/rspamd_proxy.sock

# Milters which handle mail that arrives via sendmail(1) command-line or qmqpd(8)
# Note: UNIX Socket files are relative to '/var/spool/postfix'
non_smtpd_milters = unix:/rspamd/rspamd_proxy.sock

milter_mail_macros =  i {mail_addr} {client_addr} {client_name} {auth_authen}

# What to do in case a milter is not working as expected?
# Possible values:
#   'accept', 'reject', 'tempfail', or 'quarantine'.
#milter_default_action = tempfail

# -*- mode: txt; tab-width: 4; indent-tabs-mode:nil  -*-
